name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
      
  #     # Login to Docker Hub
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     # Set up Docker Buildx
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     # Build and push Docker image to Docker Hub
  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         file: ./Dockerfile
  #         push: true
  #         tags: ${{ secrets.DOCKER_NAME }}/project_csn:frontend_play

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # üî• ‡πÉ‡∏ä‡πâ KUBECONFIG ‡∏à‡∏≤‡∏Å Secret
      - name: Set up KUBECONFIG
        run: |
          mkdir -p $HOME/.kube  # ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ
          echo "${{ secrets.KUBECONFIG_ALL_CLUSTERS }}" | base64 --decode > $HOME/.kube/config
          export KUBECONFIG=$HOME/.kube/config
          chmod 600 $HOME/.kube/config
          kubectl config get-contexts

      # üöÄ Loop ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏∏‡∏Å Cluster
      - name: Deploy to all clusters
        run: |
          for context in $(kubectl config get-contexts -o name); do
            echo "Switching to context: $context"
            kubectl config use-context $context
            kubectl set image deployment/play play=${{ secrets.DOCKER_NAME }}/project_csn:frontend_play
            kubectl rollout status deployment/play
          done



# name: Build and Deploy

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
    
#       - name: Checkout code
#         uses: actions/checkout@v4
      
#       # Login Docker
#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       # Set up Docker Buildx
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       # Build and push docker hub
#       - name: Build and push docker hub
#         uses: docker/build-push-action@v5
#         with:
#           context: .
#           file: ./Dockerfile
#           push: true
#           tags: ${{ secrets.DOCKER_NAME }}/project_csn:frontend_play
      

#       #Update file
#       - name: Update Docker container
#         run: |
#             sshpass -p ${{ secrets.SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} '
#             cd ../var/www/
#             # echo "${{ secrets.DOCKER_USERNAME }}" | docker login -u "${{ secrets.DOCKER_PASSWORD }}" --password-stdin
#             docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
#             # docker stop backOfice
#             # docker rm backOfice
#             docker-compose down
#             docker-compose rm
#             # echo "frontend_play"
#             docker pull littleweb14766/project_csn:frontend_play
#             # # docker run -d --name backOfice -p 3002:3002 littleweb14766/project_csn:frontend_play
#             docker-compose up -d
#             '



      